/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * OpenAPI spec version: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ProductOptionAddValuesInner } from '../models/ProductOptionAddValuesInner';
import { HttpFile } from '../http/http';

export class ProductOptionAdd {
    /**
    * Defines option\'s name
    */
    'name': string;
    /**
    * Defines option\'s type that has to be added
    */
    'type': ProductOptionAddTypeEnum;
    /**
    * Defines product id where the option should be added
    */
    'productId'?: string;
    /**
    * Defines default option value that has to be added
    */
    'defaultOptionValue'?: string;
    /**
    * Defines option values that has to be added
    */
    'optionValues'?: string;
    /**
    * Defines option\'s description
    */
    'description'?: string;
    /**
    * Defines whether the option is available
    */
    'avail'?: boolean;
    /**
    * Sort number in the list
    */
    'sortOrder'?: number;
    /**
    * Defines if the option is required
    */
    'required'?: boolean;
    /**
    * An array of option values.</b>
    */
    'values'?: Array<ProductOptionAddValuesInner>;
    /**
    * Is cache clear required
    */
    'clearCache'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ProductOptionAddTypeEnum",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "defaultOptionValue",
            "baseName": "default_option_value",
            "type": "string",
            "format": ""
        },
        {
            "name": "optionValues",
            "baseName": "option_values",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "avail",
            "baseName": "avail",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sortOrder",
            "baseName": "sort_order",
            "type": "number",
            "format": ""
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "values",
            "baseName": "values",
            "type": "Array<ProductOptionAddValuesInner>",
            "format": ""
        },
        {
            "name": "clearCache",
            "baseName": "clear_cache",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductOptionAdd.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ProductOptionAddTypeEnum {
    OptionTypeSelect = 'option_type_select',
    OptionTypeText = 'option_type_text',
    OptionTypeRadio = 'option_type_radio',
    OptionTypeCheckbox = 'option_type_checkbox',
    OptionTypeTextarea = 'option_type_textarea',
    OptionTypeReadonly = 'option_type_readonly',
    OptionTypeMultiselect = 'option_type_multiselect',
    OptionTypeMulticheckbox = 'option_type_multicheckbox',
    OptionTypeFile = 'option_type_file',
    OptionTypeDate = 'option_type_date',
    OptionTypeDatetime = 'option_type_datetime',
    OptionTypeTime = 'option_type_time'
}

