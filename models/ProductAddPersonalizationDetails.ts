/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * OpenAPI spec version: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Defines personalization settings for the listing. To enable personalization, is_personalizable must be set to true. When enabled, additional fields may be used to configure the personalization experience, including whether it is required (personalization_is_required), the maximum character limit (personalization_char_count_max), and buyer instructions (personalization_instructions). All related fields are only applicable if personalization is enabled.
*/
export class ProductAddPersonalizationDetails {
    'isPersonalizable': boolean;
    'personalizationIsRequired'?: boolean;
    'personalizationCharCountMax'?: number;
    'personalizationInstructions'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "isPersonalizable",
            "baseName": "is_personalizable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "personalizationIsRequired",
            "baseName": "personalization_is_required",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "personalizationCharCountMax",
            "baseName": "personalization_char_count_max",
            "type": "number",
            "format": ""
        },
        {
            "name": "personalizationInstructions",
            "baseName": "personalization_instructions",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductAddPersonalizationDetails.attributeTypeMap;
    }

    public constructor() {
    }
}
